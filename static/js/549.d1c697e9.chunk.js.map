{"version":3,"file":"static/js/549.d1c697e9.chunk.js","mappings":"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","sources":["api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const REACT_APP_API_KEY = 'd06304d9e64e03eb8f54c91af082a1f3';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDRkOWU2NGUwM2ViOGY1NGM5MWFmMDgyYTFmMyIsInN1YiI6IjY0NzhlNTE5Y2Y0YjhiMDE0MThkZWI5YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rtCRi_Yj7uZNfshhCG6H9Eyo6JMNm4bccFC0_mOpATI';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nexport const imageBaseURL = 'https://image.tmdb.org/t/p/';\n\n// ########################################\n\n// export async function getTrendingMovies() {\n//   const response = await axios.get('/trending/movie/day');\n//   return response.data;\n// }\n","import styled from 'styled-components';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding: 30px;\n\n  @media screen and (min-width: 480px) {\n    flex-direction: row;\n  }\n\n  color: whitesmoke;\n\n  background-color: #34495e;\n  background: linear-gradient(\n      to right bottom,\n      rgb(35, 24, 24),\n      rgba(35, 24, 24, 0.7)\n    ),\n    ${props => `url(${props.bgLink})`};\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Image = styled.img`\n  border-radius: 6px;\n  overflow: hidden;\n  max-width: 250px;\n`;\n\nexport const Year = styled.span`\n  font-weight: normal;\n  color: rgb(206, 210, 214);\n`;\n\nexport const Score = styled.span`\n  color: ${setStatColor};\n  font-weight: bold;\n`;\n\nfunction setStatColor({ value }) {\n  if (value >= 80) return '#4CAF50';\n  if (value >= 40 && value < 80) return 'goldenrod';\n  if (value < 40) return '#f44336';\n}\n\nexport const SecondaryText = styled.p`\n  font-size: 0.9rem;\n  color: rgb(206, 210, 214);\n`;\n","import {\n  Image,\n  MovieDetailsWrapper,\n  Score,\n  SecondaryText,\n  Year,\n} from './MovieInfo.styled';\n\nimport { imageBaseURL } from 'api';\n\n// ############################################################\n\nexport default function MovieInfo({ data }) {\n  const {\n    title,\n    poster_path = null,\n    overview,\n    genres,\n    vote_average,\n    backdrop_path,\n    release_date = null,\n  } = data;\n\n  const year = release_date ? `(${release_date.slice(0, 4)})` : null;\n\n  const score = Math.round(vote_average * 10);\n\n  return (\n    <MovieDetailsWrapper bgLink={`${imageBaseURL}w1280${backdrop_path}`}>\n      <div>\n        {poster_path && (\n          <Image\n            src={`${imageBaseURL}w342${poster_path}`}\n            srcSet={`${imageBaseURL}w342${poster_path} 1x, ${imageBaseURL}w500${poster_path} 2x`}\n            alt={`Poster of ${title}`}\n            // width=\"250\"\n          />\n        )}\n      </div>\n      <div>\n        <h2>\n          {title} <Year>{year}</Year>{' '}\n        </h2>\n        <p>\n          User score: <Score value={score}>{score}</Score>%\n        </p>\n\n        <h3>Overview</h3>\n        <SecondaryText>{overview}</SecondaryText>\n\n        <h3>Genres</h3>\n        <SecondaryText>\n          {genres.map(genre => genre.name).join(', ')}\n        </SecondaryText>\n      </div>\n    </MovieDetailsWrapper>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'api';\n\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\n\n// ############################################################\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    let cancel;\n\n    async function getMovieData() {\n      try {\n        setError('');\n        setIsLoading(true);\n\n        const response = await axios.get('/movie/' + movieId, {\n          cancelToken: new axios.CancelToken(c => (cancel = c)),\n        });\n\n        setMovieData(response.data);\n      } catch ({ message }) {\n        if (message !== 'canceled') {\n          setError(message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovieData();\n\n    return () => cancel();\n  }, [movieId]);\n\n  if (!movieData) return;\n\n  return (\n    <>\n      <Link to={backLink}>Go back</Link>\n      <br />\n      <br />\n      {isLoading && <div>Loading...</div>}\n\n      {error && <div>{error}</div>}\n\n      {movieData && !isLoading && (\n        <>\n          <MovieInfo data={movieData} />\n\n          <hr />\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: backLink }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLink }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["axios","imageBaseURL","MovieDetailsWrapper","styled","props","bgLink","Image","Year","Score","value","SecondaryText","MovieInfo","data","title","poster_path","overview","genres","vote_average","backdrop_path","release_date","year","slice","score","Math","round","src","srcSet","alt","map","genre","name","join","MovieDetails","movieId","useParams","backLink","useLocation","state","from","useState","movieData","setMovieData","error","setError","isLoading","setIsLoading","useEffect","cancel","cancelToken","c","response","message","getMovieData","to"],"sourceRoot":""}