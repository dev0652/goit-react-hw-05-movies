{"version":3,"file":"static/js/415.2422cd22.chunk.js","mappings":"mLAOAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAJE,6NAMK,IAAMC,EAAe,6B,sGCFfC,GANOC,EAAAA,GAAAA,GAAH,4EAMOA,EAAAA,GAAAA,GAAH,qKAURC,EAAQD,EAAAA,GAAAA,IAAH,4CAILE,EAAOF,EAAAA,GAAAA,IAAH,6DAKJG,EAAQH,EAAAA,GAAAA,EAAH,8CAGLI,EAAOJ,EAAAA,GAAAA,EAAH,wCAIJK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,oIASVO,EAAcP,EAAAA,GAAAA,EAAH,wC,kBC9BT,SAASQ,EAAT,GAIX,IAAD,IAHDC,UAAaC,EAGZ,EAHYA,GAAIC,EAGhB,EAHgBA,MAGhB,IAHuBC,YAAAA,OAGvB,MAHqC,KAGrC,MAH2CC,aAAAA,OAG3C,MAH0D,KAG1D,MAFDC,MAAAA,OAEC,MAFO,KAEP,MADDC,YAGMC,OAFL,SAEkCH,EADN,WAAOA,EAAaI,MAAM,EAAG,GAA7B,KAAqC,KACf,KAC7CC,EAAOJ,EAAQ,CAAEI,KAAK,iBAAD,OAAmBJ,IAAY,IAE1D,OACE,SAACf,EAAD,WACE,SAACM,EAAD,CAAYc,GAAE,kBAAaT,GAAMU,MAAOF,EAAxC,UACE,4BACE,SAACjB,EAAD,CACEoB,IACET,EAAW,UACJd,EAAAA,EADI,eACec,GACtB,qDAGNU,IAAKX,KAGP,UAACT,EAAD,YACE,SAACC,EAAD,UAAQQ,IACPK,GACC,SAACZ,EAAD,UAAOY,KAEP,SAACT,EAAD,UAAcM,aAO3B,CC/CM,IAAMU,EAAOvB,EAAAA,GAAAA,GAAH,4ECCF,SAASwB,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,KAAMX,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YAC/C,OACE,SAAC,EAAD,UACGU,EAAKC,KAAI,SAAAC,GAAO,OACf,SAACnB,EAAD,CAEEC,UAAWkB,EACXZ,YAAaA,EACbD,MAAOA,GAHFa,EAAQjB,GAFA,KAUtB,C,wJCPc,SAASkB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EADU,wCAGd,sGAEIF,EAAS,IAFb,SAI2BpC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDuC,YAAa,IAAIvC,EAAAA,EAAAA,aAAkB,SAAAwC,GAAC,OAAKF,EAASE,CAAd,MAL1C,OAIUC,EAJV,OAOIP,EAAUO,EAASb,KAAKc,SAP5B,gDASoB,cADPC,EARb,KAQaA,UAEPP,EAASO,GAVf,0DAHc,sBAoBd,OApBc,mCAkBdC,GAEO,kBAAMN,GAAN,CACR,GAAE,KAGD,iCACE,wBAAI,mBAEHH,IAAS,yBAAMA,IAEfF,EAAOY,OAAS,IAAK,SAAC,IAAD,CAAWjB,KAAMK,MAG5C,C","sources":["api.js","components/MovieListitem/MovieListitem.styled.js","components/MovieListitem/MovieListitem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const REACT_APP_API_KEY = 'd06304d9e64e03eb8f54c91af082a1f3';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDRkOWU2NGUwM2ViOGY1NGM5MWFmMDgyYTFmMyIsInN1YiI6IjY0NzhlNTE5Y2Y0YjhiMDE0MThkZWI5YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rtCRi_Yj7uZNfshhCG6H9Eyo6JMNm4bccFC0_mOpATI';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nexport const imageBaseURL = 'https://image.tmdb.org/t/p/';\n\n// ########################################\n\n// export async function getTrendingMovies() {\n//   const response = await axios.get('/trending/movie/day');\n//   return response.data;\n// }\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  width: 175px;\n  min-width: 175px;\n  font-size: 0.8rem;\n\n  border: 0.5px solid lightGray;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n`;\n\nexport const Meta = styled.div`\n  padding: 0 10px;\n  color: black;\n`;\n\nexport const Title = styled.p`\n  font-weight: bold;\n`;\nexport const Year = styled.p`\n  color: gray;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-weight: normal;\n\n  :hover,\n  :focus {\n    text-decoration: none;\n  }\n`;\nexport const ReleaseDate = styled.p`\n  color: gray;\n`;\n","import {\n  Image,\n  ListItem,\n  Meta,\n  ReleaseDate,\n  StyledLink,\n  Title,\n  Year,\n} from './MovieListitem.styled';\n\nimport { imageBaseURL } from 'api';\n\n// ###################################################\n\nexport default function MovieListitem({\n  movieData: { id, title, poster_path = null, release_date = null },\n  query = null,\n  isDateAYear = false,\n}) {\n  const getYear = date => (date ? `(${release_date.slice(0, 4)})` : null);\n  const year = isDateAYear ? getYear(release_date) : null;\n  const from = query ? { from: `/movies?query=${query}` } : '/';\n\n  return (\n    <ListItem>\n      <StyledLink to={`/movies/${id}`} state={from}>\n        <div>\n          <Image\n            src={\n              poster_path\n                ? `${imageBaseURL}w185${poster_path}`\n                : 'https://fakeimg.pl/175x260?text=No+image&font=noto'\n            }\n            // srcSet={`${imageBaseURL}w185${profile_path} 1x, ${imageBaseURL}w185${profile_path} 2x`}\n            alt={title}\n          />\n\n          <Meta>\n            <Title>{title}</Title>\n            {year ? (\n              <Year>{year}</Year>\n            ) : (\n              <ReleaseDate>{release_date}</ReleaseDate>\n            )}\n          </Meta>\n        </div>\n      </StyledLink>\n    </ListItem>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n","import MovieListitem from 'components/MovieListitem/MovieListitem';\nimport { List } from './MovieList.styled';\n\nexport default function MovieList({ data, query, isDateAYear }) {\n  return (\n    <List>\n      {data.map(element => (\n        <MovieListitem\n          key={element.id}\n          movieData={element}\n          isDateAYear={isDateAYear}\n          query={query}\n        />\n      ))}\n    </List>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nimport axios from 'axios';\nimport 'api';\n\nimport MovieList from 'components/MovieList/MovieList';\n\n// ###### Home ####################################\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    let cancel;\n\n    async function getTrendingMovies() {\n      try {\n        setError('');\n\n        const response = await axios.get('/trending/movie/day', {\n          cancelToken: new axios.CancelToken(c => (cancel = c)),\n        });\n        setMovies(response.data.results);\n      } catch ({ message }) {\n        if (message !== 'canceled') {\n          setError(message);\n        }\n      }\n    }\n\n    getTrendingMovies();\n\n    return () => cancel();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      {error && <div>{error}</div>}\n\n      {movies.length > 0 && <MovieList data={movies} />}\n    </>\n  );\n}\n"],"names":["axios","imageBaseURL","ListItem","styled","Image","Meta","Title","Year","StyledLink","Link","ReleaseDate","MovieListitem","movieData","id","title","poster_path","release_date","query","isDateAYear","year","slice","from","to","state","src","alt","List","MovieList","data","map","element","Home","useState","movies","setMovies","error","setError","useEffect","cancel","cancelToken","c","response","results","message","getTrendingMovies","length"],"sourceRoot":""}