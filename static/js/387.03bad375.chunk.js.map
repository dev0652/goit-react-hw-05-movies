{"version":3,"file":"static/js/387.03bad375.chunk.js","mappings":"mLAOAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAJE,6NAMK,IAAMC,EAAe,6B,+KCTfC,EAAOC,EAAAA,GAAAA,GAAH,+FAQJC,EAAWD,EAAAA,GAAAA,GAAH,oKAURE,EAAeF,EAAAA,GAAAA,IAAH,mDAIZG,EAAQH,EAAAA,GAAAA,IAAH,4CAILI,EAAOJ,EAAAA,GAAAA,IAAH,4CAIJK,EAAYL,EAAAA,GAAAA,EAAH,8CAGTM,EAAKN,EAAAA,GAAAA,EAAH,sB,SCjBA,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KA+BA,IA7BAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EADU,wCAKd,sGAEIJ,EAAS,MACTE,GAAa,GAHjB,SAK2BnB,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DW,YAAa,IAAItB,EAAAA,EAAAA,aAAkB,SAAAuB,GAAC,OAAKF,EAASE,CAAd,MAN1C,OAKUC,EALV,OASIT,EAAWS,EAASC,MATxB,gDAWoB,cADPC,EAVb,KAUaA,UAEPT,EAASS,GAZf,yBAeIP,GAAa,GAfjB,6EALc,sBA0Bd,OA1Bc,mCAwBdQ,GAEO,kBAAMN,GAAN,CACR,GAAE,CAACV,IAECG,EAEL,OACE,iCACE,wBAAI,SACgB,IAAnBA,EAAQc,SAAiBV,IACxB,yBAAK,wDAENA,IAAa,yBAAK,eAElBF,IAAS,yBAAMA,IAEfF,IAAYI,IACX,0BACE,SAAChB,EAAD,UACGY,EAAQe,KAAKC,KACZ,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,IAAwBC,aAAAA,OAAxB,MAAuC,KAAvC,SACE,SAAC9B,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CACE6B,IACED,EAAY,UACLjC,EAAAA,EADK,eACciC,GACtB,qDAGNE,IAAKJ,KAEP,UAACzB,EAAD,YACE,SAACC,EAAD,UAAYwB,KACZ,SAACvB,EAAD,UAAKwB,WAbIF,EADjB,UAyBb,C","sources":["api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n// const REACT_APP_API_KEY = 'd06304d9e64e03eb8f54c91af082a1f3';\n\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDYzMDRkOWU2NGUwM2ViOGY1NGM5MWFmMDgyYTFmMyIsInN1YiI6IjY0NzhlNTE5Y2Y0YjhiMDE0MThkZWI5YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rtCRi_Yj7uZNfshhCG6H9Eyo6JMNm4bccFC0_mOpATI';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nexport const imageBaseURL = 'https://image.tmdb.org/t/p/';\n\n// ########################################\n\n// export async function getTrendingMovies() {\n//   const response = await axios.get('/trending/movie/day');\n//   return response.data;\n// }\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 10px;\n\n  width: 90vw;\n  overflow-x: auto;\n`;\n\nexport const ListItem = styled.li`\n  width: 120px;\n  min-width: 120px;\n  font-size: 0.8rem;\n\n  border: 0.5px solid lightGray;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const ImageWrapper = styled.div`\n  /* max-width: 120px; */\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n`;\n\nexport const Meta = styled.div`\n  padding: 0 10px;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: bold;\n`;\nexport const As = styled.p``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport axios from 'axios';\nimport 'api';\nimport { imageBaseURL } from 'api';\nimport {\n  ActorName,\n  As,\n  Image,\n  ImageWrapper,\n  List,\n  ListItem,\n  Meta,\n} from './Cast.styled';\n\n// ############################################################\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [credits, setCredits] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    let cancel;\n\n    // GET 'https://api.themoviedb.org/3/movie/603692/credits?language=en-US'\n\n    async function getCredits() {\n      try {\n        setError(null);\n        setIsLoading(true);\n\n        const response = await axios.get(`/movie/${movieId}/credits`, {\n          cancelToken: new axios.CancelToken(c => (cancel = c)),\n        });\n\n        setCredits(response.data);\n      } catch ({ message }) {\n        if (message !== 'canceled') {\n          setError(message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getCredits();\n\n    return () => cancel();\n  }, [movieId]);\n\n  if (!credits) return;\n\n  return (\n    <>\n      <h2>Cast</h2>\n      {credits.length === 0 && !isLoading && (\n        <div>Sorry, we have no cast information for this movie. </div>\n      )}\n      {isLoading && <div>Loading...</div>}\n\n      {error && <div>{error}</div>}\n\n      {credits && !isLoading && (\n        <div>\n          <List>\n            {credits.cast.map(\n              ({ id, name, character, profile_path = null }) => (\n                <ListItem key={id}>\n                  <ImageWrapper>\n                    <Image\n                      src={\n                        profile_path\n                          ? `${imageBaseURL}w185${profile_path}`\n                          : 'https://fakeimg.pl/120x180?text=No+photo&font=noto'\n                      }\n                      // srcSet={`${imageBaseURL}w185${profile_path} 1x, ${imageBaseURL}w185${profile_path} 2x`}\n                      alt={name}\n                    />\n                    <Meta>\n                      <ActorName>{name}</ActorName>\n                      <As>{character}</As>\n                    </Meta>\n                  </ImageWrapper>\n                </ListItem>\n              )\n            )}\n          </List>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["axios","imageBaseURL","List","styled","ListItem","ImageWrapper","Image","Meta","ActorName","As","Cast","movieId","useParams","useState","credits","setCredits","error","setError","isLoading","setIsLoading","useEffect","cancel","cancelToken","c","response","data","message","getCredits","length","cast","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}